stages:
  - test
  - deploy

test:
  stage: test
  image: python:3.10.12
  variables:
    ALLOWED_HOSTS: "*"
    SQLITE_DIR: "$BASE_DIR/docker/db_empty.sqlite3"
    DEBUG: 'true'
  script:
    - pip install -r requirements.txt
    - python3 manage.py test

deploy:
  stage: deploy
  image: 
    name: docker:latest
    entrypoint: [""]
  services:
     - docker:19-dind
  id_tokens:
    GITLAB_OIDC_TOKEN:
      aud: https://gitlab.com
  script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - echo Login to AWS
    - >
      export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s"
      $(aws sts assume-role-with-web-identity
      --role-arn ${ROLE_ARN}
      --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}"
      --web-identity-token ${GITLAB_OIDC_TOKEN}
      --duration-seconds 3600
      --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]'
      --output text))
    - aws sts get-caller-identity
    - echo Build docker image
    - docker build -t $CI_PROJECT_NAME:$CI_COMMIT_SHA -f docker/Dockerfile ./ 
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 474414115297.dkr.ecr.us-east-1.amazonaws.com
    - echo Uploading
    - docker push 474414115297.dkr.ecr.us-east-1.amazonaws.com/$CI_PROJECT_NAME:$CI_COMMIT_SHA
